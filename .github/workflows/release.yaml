name: Release

on:
  push:
    tags:
    - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.1

    - name: Cache Dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download Dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: go mod download

    - name: Build Linux AMD64
      run: GOOS=linux GOARCH=amd64 go build -o kubectl-curl_linux_amd64

    - name: Build Linux ARM64
      run: GOOS=linux GOARCH=arm64 go build -o kubectl-curl_linux_arm64

    - name: Build Darwin AMD64
      run: GOOS=darwin GOARCH=amd64 go build -o kubectl-curl_darwin_amd64

    - name: Build Darwin ARM64
      run: GOOS=darwin GOARCH=arm64 go build -o kubectl-curl_darwin_arm64

    - name: Build Windows AMD64
      run: GOOS=windows GOARCH=amd64 go build -o kubectl-curl_windows_amd64.exe

    - name: Build WIndows ARM64
      run: GOOS=windows GOARCH=arm64 go build -o kubectl-curl_windows_arm64.exe

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          LICENSE
          kubectl-curl_linux_amd64
          kubectl-curl_linux_arm64
          kubectl-curl_darwin_amd64
          kubectl-curl_darwin_arm64
          kubectl-curl_windows_amd64.exe
          kubectl-curl_windows_arm64.exe
